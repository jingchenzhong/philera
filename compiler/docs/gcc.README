自定义段：
__attribute__((section("FOO"))) int global=42;
__attribute__((section("BAR"))) void foo()
{
}

.data保存了初始化了的全局静态变量和局部静态变量
.rodata保存了只读数据，一般是const修饰变量和字符串常量
.bss段存放未初始化的全局变量和局部静态变量。有些编译器会将
全局未初始化变量放在.bss里，有些则是预留一个未定义的全局变量符号
等到最终链接时再放入.bss段。编译单元内的可见静态变量是放在
.bss段的

static int x1 = 0;
static int x2 = 1;
因为x1初始化为0,可认为没有初始化，所以放在.bss段，不占空间
而x2确实初始化为1,因此放在.data段


链接器使用两步链接：
第一步：空间与地址分配： 扫描所有的输入目标文件，并获取他们各个段长度，属性和位置，
并且将输入目标文件中的符号表中所有符号定义和符号引用收集起来，统一放在
一个全局符号表，这一步中，链接器将能够获得所有输入目标文件的段长度，并将他们合并，计算出文件中各个段合并后的长度和位置，并
建立映射关系。
第二步：符号解析与重定位：读取输入文件中的段的数据，重定位信息，并进行
符号解析与重定位，调整代码中的地址。

符号地址的确定：
第一步的扫描和空间分配，链接器按照上述方法进行分配，那么这时各段在链接后的虚拟地址就确定了，然后根据各符号在各段内偏移调整地址


重定位：
OFFSET TYPE VALUE
指令修成方法：

