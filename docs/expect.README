Expect是UNIX系统中用来进行自动化控制和测试的软件工具,作为Tcl脚本语言
的一个扩展，应用在交互软件中例如telnet, ftp, passwd, fsck, rlogin, tip, 
ssh等。该工具利用UNIX伪终端包装其子进程，允许任意程序通过终端接入进行
自动化控制，也可利用Tk工具，将交互程序包装在X11的图形用户界面中。
Expect含有利用正则表达式进行模式匹配以及通用的编程功能。
Expect脚本中可以包含shell,查询环境变量，通过执行某些UNIX命令
获得更多的信息，然后在产品所带命令行接口中加入必须的信息，来
完成用户的目标。在产品命令行接口中查询相关信息，该脚本可以在多
种选择中智能的决定当前应该做什么合适。
每次Expect操作完成，运行结果将保存在本地环境变量$expect_out中
允许脚本收集这些信息给用户以相应的反馈，同时也允许根据当前情况发送相对应的指令。
Expect通常被用来建立一组测试套件，比如DejaGnu就是利用Expect写
成一组测试套件。
可以使用“autoexpect”的工具，自动生成expect脚本
对于图形用户界面Autohotkey或者AutoIt来实现自动化控制


set命令给变量赋值
if,for,continue等命令控制程序流程
spawn命令激活一个UNIX程序来进行交互式的运行
send命令向进程发送字符串
expect命令等待进程的某些字符串，支持正则表达式，并能同时等待多个字符串，并对每个字符串执行不同的操作
expect patlist1 action1,patlist2 action2,...
该命令一直等到进程的输出于以上一个模式匹配，或者等到时间超过一个特定的时间长度，或者遇到了文件结束为止
被精确匹配的字符串被存储在变量expect_match里面，如果patlist是eof或者timeout,则发生文件结束或者超时时才执行
相应的action，使用'set timeout 30'来设置超时时间
march_max决定了多少字符可被用来匹配

expect [ -dDinN ] [ -c cmds ] [ [ -[f|b] ] cmdfile ] [ args ]
Expect读取cmdfile获取执行命令的列表。它也可以作为脚本被调用#!/usr/bin/expect -f

-c 执行一个命令在脚本之前。
-d 启动一些诊断输出
-D 启用交互式调试器
-f 引用一个文件从其读出命令
-b 当从stdin读取命令时需要从文件中一行行读取，需要使用这个选项
-i 引起Expect交互式读取命令
-- 可能被用来确定选项结尾


